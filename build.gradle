buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

wrapper {
    gradleVersion = '6.1'
}

group 'com.matteoveroni'
version = "0.1.0-SNAPSHOT"

repositories {
    jcenter()
}

dependencies {
    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // Weld CDI
    implementation group: 'org.jboss.weld.se', name: 'weld-se-shaded', version: '3.1.4.Final'

    // Javalin
    implementation group: 'io.javalin', name: 'javalin', version: '3.8.0'

    // Swagger and OpenApi libraries for documentation
    implementation group: 'io.swagger.core.v3', name: 'swagger-core', version: '2.1.1' //2.0.9
    implementation group: 'org.webjars', name: 'swagger-ui', version: '3.24.3'

    // Jacskon (for Javalin and Swagger)
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.0'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.11.0'

    // GSON
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    // Lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.12'

    // JUnit
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest.attributes(
            'Implementation-Title': 'Simple Rest API',
            'Specification-Version': project.version.replace('-SNAPSHOT', ''),
            'Implementation-Version': project.version,
            'Main-Class': 'com.matteoveroni.simplerestapi.App'
    )
}

shadowJar {
    archiveFileName = "${archiveBaseName.get()}-${archiveVersion.get()}.${archiveExtension.get()}"
}

task copyConfToLib(type: Copy) {
    from "${projectDir}/conf"
    into "${libsDirectory.get()}/conf"
}

task packageDistribution(type: Zip) {
    archiveFileName = "${archiveBaseName.get()}-${archiveVersion.get()}.zip"
    destinationDirectory = file(distsDirectory.get())
    from libsDirectory.get()
}

clean.mustRunAfter wrapper
build.mustRunAfter clean

shadowJar.dependsOn copyConfToLib
shadowJar.finalizedBy packageDistribution